<?xml version="1.0" encoding="UTF-8"?>
<!-- deptMapper.xml -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.leaf.model.curriculum.LectDAO">
	<select id="listLect" resultType="com.leaf.model.curriculum.LectDTO">
		 select * from
      (SELECT ROWNUM NUM, m.* FROM 
                     ( SELECT * FROM lecture ORDER BY lect_id DESC)   m)
      where NUM between ((#{page}-1)*5)+1 and (#{page}*5)
	</select>

	<select id="getLectByLect_id" parameterType="int"
		resultType="com.leaf.model.curriculum.LectDTO">
		select*from lecture where lect_id = #{lect_id}
	</select>

	<select id="searchLect" parameterType="hashMap"
		resultType="com.leaf.model.curriculum.LectDTO">
		
      select * from (SELECT ROWNUM NUM, m.* FROM
      ( select lect_id, curri_id , lect_name, lect_person_num, 
      lect_start_day, lect_end_day, lect_start_time, lect_end_time,
       lect_write_time, lect_modify_time, lect_accept, enabled, 
       rownum r from lecture where ${column} like '%' || #{keyvalue} || '%' order by lect_id desc) m)
      where NUM between ((#{page}-1)*5)+1 and (#{page}*5)
      
 
	</select>


	<insert id="insertLect" parameterType="com.leaf.model.curriculum.LectDTO">
		 <selectKey resultType="int" keyProperty="lect_id" order="BEFORE">
			select NVL(max(lect_id),0)+1 from lecture
		</selectKey> 
		
		insert into
		lecture(lect_id,lect_name,lect_person_num,lect_start_day,lect_end_day,
				lect_start_time,lect_end_time,lect_write_time)
		values(#{lect_id}, #{lect_name}, #{lect_person_num}, #{lect_start_day},
				#{lect_end_day}, #{lect_start_time}, #{lect_end_time}, 
				 #{lect_write_time})
		
	</insert>

	<delete id="deleteLect" parameterType="int">
		delete from lecture where lect_id=#{lect_id}
	</delete>

 	<update id="updateLect" parameterType="com.leaf.model.curriculum.LectDTO"> 
		update lecture set lect_name=#{lect_name}, lect_person_num=#{lect_person_num}, 
		lect_start_day=#{lect_start_day}, lect_end_day=#{lect_end_day}, 
		lect_start_time=#{lect_start_time}, lect_end_time=#{lect_end_time}, 
		lect_modify_time=#{lect_modify_time} where lect_id=#{lect_id} 
	</update>
	
	<select id="getCount" parameterType="Integer" resultType="Integer">
		select count(*) from lecture ORDER BY lect_id DESC
	</select>
	
	  <select id="getSearchCount" parameterType="hashMap" resultType="Integer">
      select count(*) from lecture where ${column} like '%' || #{keyvalue} || '%'
   </select>
	
	
	<delete id = "multiDeleteLect">
		delete from lecture where lect_id in <foreach item = "item" 
		index="index" collection="list"  open="(" separator = "," close=")">
		#{item}
		</foreach>
	</delete>
</mapper>
	
	
